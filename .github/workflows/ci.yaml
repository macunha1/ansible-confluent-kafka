---
name: Continuous Integration

"on":
  push:
    branches: ["**"]
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Python | Setup
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.8"

      - name: Python | Enable cache for (pip) dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Lint | Check Ansible and YAML
        run: |
          python -m pip install --upgrade pip
          python -m pip install yamllint ansible ansible-lint

          yamllint -c .github/actions/config/yamllint.yaml .
          ansible-lint -c .github/actions/config/ansible.yaml .

  # NOTE: Tests with docker runner are not working due to systemd <> docker
  # incompatibility.
  #
  # test:
  #   runs-on: ubuntu-22.04
  #   needs: build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ansible_version:
  #         - 2.9.27
  #         - 2.10.7
  #         - 6.5.0

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Test | Run Playbook
  #       uses: addnab/docker-run-action@v3
  #       with:
  #         image: docker.io/macunha1/ansible:java-alpine-3.16.2
  #         shell: bash
  #         options: >-
  #           -v ${{ github.workspace }}:/workspace/macunha1.confluent_kafka
  #           -e ANSIBLE_ROLES_PATH=/workspace
  #           -w /workspace/macunha1.confluent_kafka
  #           --entrypoint "sh"
  #         run: |
  #           pip install ansible==${{ matrix.ansible_version }}
  #           # NOTE: No longer installing the requirements.yaml in the test phase
  #           # to avoid (constant) issues with Java Hotspot 8. The Docker image
  #           # includes OpenJDK 8/11 by default, so that tests don't need to rely
  #           # on external resources, making them more predictable, consistent,
  #           # and easily reproducible.
  #           #
  #           # ansible-galaxy install -r requirements.yaml

  #           # Check code style and syntax
  #           ansible-playbook -c local --syntax-check tests/playbook.yaml

  #           # Install using test.yaml playbook
  #           ansible-playbook -c local tests/playbook.yaml

  publish:
    if: ${{ github.ref == 'refs/heads/main' }}

    runs-on: ubuntu-22.04
    # needs: test
    strategy:
      fail-fast: true

    steps:
      # NOTE: Anchors are not supported
      # Ref: https://github.com/macunha1/ansible-confluent-kafka/actions/runs/3304508364
      - name: Python | Enable cache for (pip) dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Galaxy | Import
        run: |
          python -m pip install ansible

          ansible-galaxy role import \
            --api-key ${ANSIBLE_GALAXY_API_KEY} \
            --branch main \
            macunha1 confluent_kafka
        env:
          ANSIBLE_GALAXY_API_KEY: ${{ secrets.ANSIBLE_GALAXY_API_KEY }}
