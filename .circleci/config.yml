---
version: 2

defaults: &defaults
  steps:
    - checkout
    - run:
        name: Ansible playbook execution
        command: |
          pip install ansible==2.9.6

          # ansible-galaxy install -r requirements.yaml
          ansible-galaxy install macunha1.confluent_kafka

          # Check code style and syntax
          ansible-playbook -c local --syntax-check test.yaml
          # Install using test.yaml playbook
          ansible-playbook -c local test.yaml

jobs:
  test-alpine3:
    docker:
      - image: macunha1/ansible:java-alpine-3.11.5
    <<: *defaults
  test-centos6:
    docker:
      - image: macunha1/ansible:centos-6
    <<: *defaults
  test-centos7:
    docker:
      - image: macunha1/ansible:centos-7
    <<: *defaults
  test-debian9:
    docker:
      - image: macunha1/ansible:java-debian-9
    <<: *defaults
  test-debian10:
    docker:
      - image: macunha1/ansible:java-debian-10
    <<: *defaults
  test-ubuntu16:
    docker:
      - image: macunha1/ansible:java-ubuntu-16.04
    <<: *defaults
  test-ubuntu20:
    docker:
      - image: macunha1/ansible:java-ubuntu-20.04
    <<: *defaults

  # Reach out to Ansible Galaxy API to import role
  galaxy-import:
    docker:
      - image: macunha1/ansible:py3-alpine-3.11.5
    steps:
      - run:
          name: Ansible Galaxy Import role
          command: |
            ansible-galaxy role import \
              --api-key ${ANSIBLE_GALAXY_API_KEY} \
              --branch master \
              macunha1 confluent_kafka

  # Executes YAML and Ansible code lint to check style
  ansible-lint:
    docker:
      - image: macunha1/ansible:py3-alpine-3.11.5
    steps:
      - checkout
      - run:
          name: YAML Lint
          command: |
            pip install yamllint -qq
            yamllint -c .circleci/lint/config.yaml .
      - run:
          name: Ansible Lint
          command: |
            pip install ansible-lint -qq
            ansible-lint -c .circleci/lint/ansible.yaml .

workflows:
  version: 2
  build:
    jobs:
      - ansible-lint
      - test-centos7
      - galaxy-import:
          requires:
            - ansible-lint
            - test-centos7
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - ansible-lint
      - test-centos7
      - galaxy-import:
          requires:
            - ansible-lint
            - test-centos7
