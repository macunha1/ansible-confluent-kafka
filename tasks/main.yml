---

- name: Create necessary users and groups
  import_tasks: groups.yml
  tags:
    - groups

- name: Install Python SE Linux lib
  import_tasks: python-selinux.yml

- name: Check if there's an unarchived Confluent package
  stat:
    path:  "{{dst_path}}/confluent-{{confluent_version}}"
  register: unarchived_confluent_package

- block: # Try to download confluent from internet
  - name: Download Confluent
    get_url:
      url: "{{ confluent_url }}"
      dest: "{{ dst_path }}"
      force: yes

  rescue: # If it fail, download locally and then copy to hosts
  - name: Download Confluent locally
    local_action: get_url url="{{ confluent_url }}" dest="{{ local_path }}" force="yes"
    become: no
    run_once: yes

  - name: Copy local Confluent package to hosts
    copy:
      src: "/tmp/confluent-oss-{{ confluent_version }}-2.11.tar.gz"
      dest: "{{ dst_path }}/confluent-oss-{{ confluent_version }}-2.11.tar.gz"

  always:
  - name: Unarchive Confluent package
    unarchive:
      src: "{{ dst_path }}/confluent-oss-{{ confluent_version }}-2.11.tar.gz"
      dest: "{{ dst_path }}"
      mode: 0775
      owner: kafka
      group: wheel
      remote_src: yes

  - name: Remove residual file
    file:
      path:  "{{ dst_path }}/confluent-oss-{{ confluent_version }}-2.11.tar.gz"
      state: absent

  when: unarchived_confluent_package.stat.exists == False
  tags:
    - download

- name: Create config directory
  file:
    path: "{{ conf_dest }}"
    state: directory
    owner: kafka
    group: wheel
    recurse: yes

- name: "Include tasks for Zookeeper"
  become: yes
  include_tasks: "zookeeper.yml"
  when: inventory_hostname in groups['zookeeper']
  tags:
    - service

- name: "Create secrets {{ ssl.path }}"
  file:
    path: "{{ ssl.path }}"
    state: directory
    owner: kafka
    group: wheel
    mode: 0600

- name: "Include tasks for Kafka"
  become: yes
  include_tasks: "kafka.yml"
  when: inventory_hostname in groups['kafka']
  tags:
    - service

# TO-DO: Make TLS useful again
# - name: Configure security layer for Kafka
#   import_tasks: "security.yml"
#   vars:
#     jkstores:
#       - "{{ kafka_security.server.keystore }}"
#       - "{{ kafka_security.server.truststore }}"
#     keypass: "{{ keypass }}"
#     templates:
#       - kafka.properties
#     service: kafka
#   tags:
#     - ssl

- name: Configure security layer for Kafka
  import_tasks: "jvm-tunning.yml"
  tags:
    - tunning

- name: Create log dir for every service
  file:
    path: "{{ log_basepath }}/{{ item }}"
    state: directory
    mode: 0751
    owner: kafka
    group: wheel
  with_items: "{{ confluent_services }}"

- name: Configure and create Kafka topics
  import_tasks: "configure-topics.yml"
  vars:
    kafka_bins: "{{ dst_path }}/confluent-{{ confluent_version }}/bin"
    topics: "{{ default_kafka_topics }}"
  when: default_kafka_topics is defined
  tags:
    - kafka-topics
    - configuration

- name: Redirect Logs
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: yes
  with_items:
    - src: "{{ dst_path }}/confluent-{{ confluent_version }}/logs/"
      dest: "{{ log_basepath }}/confluent"
