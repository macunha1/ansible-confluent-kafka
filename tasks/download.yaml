---
- name: Confluent | Check if there's an unarchived package
  stat:
    path: "{{ dst_path }}/confluent-{{ confluent_version }}"
  register: unarchived_confluent_package
  tags:
    - installation

- block: # Try to download the Confluent package on the host directly from the internet
    - name: Confluent | Download
      get_url:
        url: "{{ confluent_url }}"
        dest: "{{ dst_path }}"
        force: yes

  rescue: # If it fails (e.g. due to network limitations or firewall), download it locally and then copy
    - name: Confluent | Download locally
      get_url:
        url: "{{ confluent_url }}"
        dest: "{{ local_path }}"
        force: yes
      connection: local
      become: no
      run_once: yes

    - name: Confluent | Copy local package to hosts
      copy:
        src: "/tmp/{{ confluent_distribution }}-{{ confluent_version }}-{{ scala_version }}.tar.gz"
        dest: "{{ dst_path }}/{{ confluent_distribution }}-{{ confluent_version }}-{{ scala_version }}.tar.gz"
        mode: 0644

  always:
    - name: Confluent | Unarchive package
      unarchive:
        src: "{{ dst_path }}/{{ confluent_distribution }}-{{ confluent_version }}-{{ scala_version }}.tar.gz"
        dest: "{{ dst_path }}"
        remote_src: yes

    - name: System Users | Change unarchived package ownership
      file:
        path: "{{ dst_path }}"
        owner: "{{ confluent_services | first }}"
        group: "{{ kafka_system_users.group }}"
        mode: "{{ kafka_system_users.permissions.directory_mode }}"
      when: kafka_system_users.enabled

    - name: Confluent | Remove archived package
      file:
        path: "{{ dst_path }}/{{ confluent_distribution }}-{{ confluent_version }}-{{ scala_version }}.tar.gz"
        state: absent

  when: not unarchived_confluent_package.stat.exists
