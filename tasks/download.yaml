---
- name: Confluent | Check if there's an unarchived package
  ansible.builtin.stat:
    path: "{{ dst_path }}/confluent-{{ confluent_version }}"
  register: unarchived_confluent_package
  tags:
    - installation

- name: Confluent | Download package
  when: not unarchived_confluent_package.stat.exists

  # Try to download the Confluent package on the host directly from the internet
  block:
    - name: Confluent | Download remotely
      ansible.builtin.get_url:
        url: "{{ confluent_url }}"
        dest: "{{ dst_path }}"
        mode: "{{ confluent_download_file_mode }}"
        force: true

  # If it fails (e.g. due to network limitations or firewall), download it locally and then copy
  rescue:
    - name: Confluent | Download locally
      ansible.builtin.get_url:
        url: "{{ confluent_url }}"
        dest: "{{ local_path }}"
        mode: "{{ confluent_download_file_mode }}"
        force: true
      connection: local
      become: false
      run_once: true

    - name: Confluent | Copy local package to hosts
      ansible.builtin.copy:
        src: "/tmp/{{ confluent_package_file_name }}"
        dest: "{{ dst_path }}/{{ confluent_package_file_name }}"
        mode: "{{ confluent_download_file_mode }}"

  always:
    - name: Confluent | Unarchive package
      ansible.builtin.unarchive:
        src: "{{ dst_path }}/{{ confluent_package_file_name }}"
        dest: "{{ dst_path }}"
        remote_src: true

    - name: System Users | Change unarchived package ownership
      ansible.builtin.file:
        path: "{{ dst_path }}"
        owner: "{{ confluent_services | first }}"
        group: "{{ kafka_system_users.group }}"
        mode: "{{ kafka_system_users.permissions.directory_mode }}"
      when: kafka_system_users.enabled

    - name: Confluent | Remove archived package
      ansible.builtin.file:
        path: "{{ dst_path }}/{{ confluent_package_file_name }}"
        state: absent
