---
- name: Kafka Topics | Choose a random Zookeeper host to make requests
  set_fact:
    random_zookeeper: >-
      {{ hostvars.get(item).ansible_all_ipv4_addresses | first }}:{{ zookeeper_port }}
  with_random_choice: "{{ zookeeper_group }}"

- name: Kafka Topics | List topics
  command: >-
    {{ kafka_bins }}/kafka-topics --zookeeper {{ random_zookeeper }} --list
  run_once: yes
  changed_when: no
  register: kafka_topics_result
  tags:
    - create

- name: Kafka Topics | Calculate replication-factor and partitions
  set_fact:
    kafka_params:
      - "--replication-factor {{ default_replication_factor }}"
      - "--partitions {{ groups['kafka'] | length }}"
  tags:
    - create

- block:
    - name: Kafka Topics | Create a new partitioned topic on Kafka
      command: >
        {{ kafka_bins }}/kafka-topics --zookeeper {{ random_zookeeper }}
        {{ kafka_params | join(" ") }} --create --topic {{ topic }}
      run_once: yes
      loop: "{{ default_kafka_topics | map(attribute='name') | list | difference(kafka_topics_result.stdout_lines) }}"
      loop_control:
        loop_var: topic
      changed_when:
        - default_kafka_topics | difference(kafka_topics_result.stdout_lines) | length > 0
      tags:
        - create

    - name: Kafka Topics | Set topic lifetime
      command: >
        {{ kafka_bins }}/kafka-topics --zookeeper {{ random_zookeeper }}
        --alter --topic {{ topic.name }} --config retention.ms={{ topic.retention_ms }}
      run_once: yes
      loop: "{{ default_kafka_topics }}"
      loop_control:
        loop_var: topic
      when: topic.retention_ms is defined
      tags:
        - create

  when: default_kafka_topics.0 is mapping

- block:
    - name: Kafka Topics | Create a new partitioned topic on Kafka (Backwards compatible)
      command: >
        {{ kafka_bins }}/kafka-topics --zookeeper {{ random_zookeeper }}
        {{ kafka_params | join(" ") }} --create --topic {{ topic }}
      run_once: yes
      loop: "{{ default_kafka_topics | difference(kafka_topics_result.stdout_lines) }}"
      loop_control:
        loop_var: topic
      changed_when:
        - default_kafka_topics | difference(kafka_topics_result.stdout_lines) | length > 0
      tags:
        - create

  when: default_kafka_topics.0 is not mapping
