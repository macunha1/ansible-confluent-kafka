# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Unspecified loggers and loggers with additivity=true output to server.log and stdout
# Note that INFO only applies to unspecified loggers, the log level of the child logger is used otherwise
log4j.rootLogger={{ log4j_rootLogger }}

log4j.appender.stdout= {{ log4j_stdout_class }}
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.appender.kafkaAppender={{ log4j_kafkaAppender_class }}
log4j.appender.kafkaAppender.File={{ log4j_kafkaAppender_file }}
log4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
log4j.appender.kafkaAppender.MaxFileSize={{ log4j_kafkaAppender_maxFileSize }}
log4j.appender.kafkaAppender.MaxBackupIndex={{ log4j_kafkaAppender_maxBackupIndex }}

log4j.appender.stateChangeAppender={{ log4j_stateChangeAppender_class }}
log4j.appender.stateChangeAppender.File={{ log4j_stateChangeAppender_file }}
log4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
log4j.appender.stateChangeAppender.MaxFileSize={{ log4j_stateChangeAppender_maxFileSize }}
log4j.appender.stateChangeAppender.MaxBackupIndex={{ log4j_stateChangeAppender_maxBackupIndex }}

log4j.appender.requestAppender={{ log4j_requestAppender_class }}
log4j.appender.requestAppender.File={{ log4j_requestAppender_file }}
log4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
log4j.appender.requestAppender.MaxFileSize={{ log4j_requestAppender_maxFileSize }}
log4j.appender.requestAppender.MaxBackupIndex={{ log4j_requestAppender_maxBackupIndex }}

log4j.appender.cleanerAppender={{ log4j_cleanerAppender_class }}
log4j.appender.cleanerAppender.File={{ log4j_cleanerAppender_file }}
log4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
log4j.appender.cleanerAppender.MaxFileSize={{ log4j_cleanerAppender_maxFileSize }}
log4j.appender.cleanerAppender.MaxBackupIndex={{ log4j_cleanerAppender_maxBackupIndex }}

log4j.appender.controllerAppender={{ log4j_controllerAppender_class }}
log4j.appender.controllerAppender.File={{ log4j_controllerAppender_file }}
log4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
log4j.appender.controllerAppender.MaxFileSize={{ log4j_controllerAppender_maxFileSize }}
log4j.appender.controllerAppender.MaxBackupIndex={{ log4j_controllerAppender_maxBackupIndex }}

log4j.appender.authorizerAppender={{ log4j_authorizerAppender_class }}
log4j.appender.authorizerAppender.File={{ log4j_authorizerAppender_file }}
log4j.appender.authorizerAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.authorizerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
log4j.appender.authorizerAppender.MaxFileSize={{ log4j_authorizerAppender_maxFileSize }}
log4j.appender.authorizerAppender.MaxBackupIndex={{ log4j_authorizerAppender_maxBackupIndex }}

# Change the line below to adjust ZK client logging
log4j.logger.org.apache.zookeeper={{ log4j_logger_zookeeper }}

# Change the two lines below to adjust the general broker logging level (output to server.log and stdout)
log4j.logger.kafka={{ log4j_logger_kafka_serverLog }}
log4j.logger.org.apache.kafka={{ log4j_logger_kafka_stdout }}

# Change to DEBUG or TRACE to enable request logging
log4j.logger.kafka.request.logger={{ log4j_logger_kafka_requestLogger }}
log4j.additivity.kafka.request.logger={{ log4j_additivity_kafka_requestLogger }}

# Uncomment the lines below and change log4j.logger.kafka.network.RequestChannel$ to TRACE for additional output
# related to the handling of requests
#log4j.logger.kafka.network.Processor=TRACE, requestAppender
#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender
#log4j.additivity.kafka.server.KafkaApis=false
log4j.logger.kafka.network.RequestChannel$={{ log4j_logger_kafka_networkRequestChannel }}
log4j.additivity.kafka.network.RequestChannel$={{ log4j_additivity_kafka_networkRequestChannel }}

log4j.logger.kafka.controller={{ log4j_logger_kafka_controller }}
log4j.additivity.kafka.controller={{ log4j_additivity_kafka_controller }}

log4j.logger.kafka.log.LogCleaner={{ log4j_logger_kafka_logCleaner }}
log4j.additivity.kafka.log.LogCleaner={{ log4j_additivity_kafka_logCleaner }}

log4j.logger.state.change.logger={{ log4j_logger_kafka_stateChangeLogger }}
log4j.additivity.state.change.logger={{ log4j_additivity_kafka_stateChangeLogger }}

# Access denials are logged at INFO level, change to DEBUG to also log allowed accesses
log4j.logger.kafka.authorizer.logger={{ log4j_logger_kafka_authorizerLogger }}
log4j.additivity.kafka.authorizer.logger={{ log4j_additivity_kafka_authorizerLogger }}
